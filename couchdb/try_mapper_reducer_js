# if splitwords is tring
{
  "_id": "_design/try_mapreduce",
  "_rev": "1-1fc27877f8074a3199ba0084a062ca8b",
  "views": {
    "new-view": {
      "reduce": "_count",
      "map": "function (doc) {\n const words = doc.splitwords.split(\" \"); for (const word of words) {emit(word, 1);}\n}"
    }
  },
  "language": "javascript"
}

# if splitwords is list of words (output from python)
{
  "_id": "_design/try_mapreduce",
  "_rev": "1-1fc27877f8074a3199ba0084a062ca8b",
  "views": {
    "new-view": {
      "reduce": "_count",
      "map": "function (doc) {\n const words = doc.splitwords; for (const word of words) {emit(word, 1);}\n}"
    }
  },
  "language": "javascript"
}

# mapper
function (doc) {
  var words = doc.splitwords.split(" ");
  for (var word of words) {
    if (word.trim().length !== 0) {
      emit(word, 1)
    }
  }
}


# reducer
function (keys, values, rereduce) {
  if (rereduce) {
    results = {'covid':0, 'death':0, 'unemployment':0, 'health':0, 'income':0}
    return sum(values);
  } else {
    return values.length;
  }
}

