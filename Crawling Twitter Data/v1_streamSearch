import tweepy as tw
import json

# add your own authentication here
api_key= ''
api_key_secret= ''
access_token= ''
access_token_secret= ''

class listener(tw.Stream):

    def on_data(self, data):

        with open('twitterdata.json', 'a', encoding='utf-8') as tf:
            json_data = json.loads(data)

            is_not_retweeted = False
            is_not_quoted = False
            has_place = False
            if ("retweeted_status" not in json_data) and ('RT @' not in json_data['text']):
                # this is for not retweeted only
                is_not_retweeted = True
            elif "quoted_status" not in json_data:
                # this is for not quoted only
                is_not_quoted = True
            elif json_data['place'] != None:
                # check if the value of place is None or not
                has_place = True

            if is_not_retweeted and is_not_quoted and has_place:
                tf.write('\n')                
                json.dump(json_data, tf)

    
    def on_error(self, status):
        if status == 420:
            #returning False in on_data disconnects the stream
            return False
        print(status)


if __name__ == '__main__':

    auth = tw.OAuthHandler(api_key, api_key_secret)
    auth.set_access_token(access_token, access_token_secret)
    api = tw.API(auth, wait_on_rate_limit=True)

    stream = listener(
        api_key, api_key_secret, access_token, access_token_secret
    )

    try:
        #stream.filter(languages=['en'], track = ['covid, coronavirus'])
        stream.filter(languages=['en'], track=['covid', 'coronavirus'], locations=[144.3340,-38.5030,145.8780,-37.1760])

        print("Start streaming.")

    except KeyboardInterrupt:
        print("Keyboard Stopped.")

    finally:
        print('Streaming Finished.')
        stream.disconnect()
